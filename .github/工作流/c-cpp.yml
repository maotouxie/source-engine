name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build-linux-i386:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build linux-i386
      run: |
        scripts/build-ubuntu-i386.sh
        ls -la
        mkdir ./build1
        mkdir ./build1/bin
        mkdir ./build1/game
        mkdir ./build1/game/bin
        find ./build -name "*.so" -exec mv -t ./build1/bin {} +
        find ./build -name "libclient.so" -exec mv -t ./build1/game/bin {} +
        find ./build -name "libserver.so" -exec mv -t ./build1/game/bin {} +
        find ./build -name "*_launcher" -exec mv -t ./build1 {} +
        rm -rf build
        mv ./build1 ./build
    - uses: actions/upload-artifact@v2
      with:
        name: Source Engine - Linux 32-bit
        path: ./build
        if-no-files-found: error

  build-linux-amd64:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build linux-amd64
      run: |
        scripts/build-ubuntu-amd64.sh
        ls -la
        mkdir ./build1
        mkdir ./build1/bin
        mkdir ./build1/game
        mkdir ./build1/game/bin
        find ./build -name "*.so" -exec mv -t ./build1/bin {} +
        find ./build -name "libclient.so" -exec mv -t ./build1/game/bin {} +
        find ./build -name "libserver.so" -exec mv -t ./build1/game/bin {} +
        find ./build -name "*_launcher" -exec mv -t ./build1 {} +
        rm -rf build
        mv ./build1 ./build
    - uses: actions/upload-artifact@v2
      with:
        name: Source Engine - Linux 64-bit
        path: ./build
        if-no-files-found: error

  build-android-armv7a:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build android-armv7a
      run: |
        scripts/build-android-armv7a.sh
        ls -la
        rm -f android*.zip
        mkdir ./build1
        mkdir ./build1/bin
        mkdir ./build1/game
        mkdir ./build1/game/bin
        find ./build -name "*.so" -exec mv -t ./build1/bin {} +
        find ./build -name "libclient.so" -exec mv -t ./build1/game/bin {} +
        find ./build -name "libserver.so" -exec mv -t ./build1/game/bin {} +
        rm -rf build
        mv ./build1 ./build
    - uses: actions/upload-artifact@v2
      with:
        name: Source Engine - Android armv7a
        path: ./build
        if-no-files-found: error

  build-windows-i386:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Build windows-i386
      run: |
        git submodule init && git submodule update
        ./waf.bat configure -T debug
        ./waf.bat build
        md .\build1
        md .\build1\bin
        md .\build1\game
        md .\build1\game\bin
        Get-ChildItem -Recurse -Filter "*.dll" | Move-Item -Force -Verbose -Destination .\build1\bin
        Get-ChildItem -Recurse -Filter "client.dll" | Move-Item -Force -Verbose -Destination .\build1\game\bin
        Get-ChildItem -Recurse -Filter "server.dll" | Move-Item -Force -Verbose -Destination .\build1\game\bin
        Get-ChildItem -Recurse -Filter "*launcher.exe" | Move-Item -Force -Verbose -Destination .\build1
        Remove-item .\build -Recurse -Force
        ren .\build1 .\build
        robocopy ".\build" ".\build" /S /move
    - uses: actions/upload-artifact@v2
      with:
        name: Source Engine - Windows 32-bit
        path: ./build
        if-no-files-found: error

  build-dedicated-windows-i386:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated windows-i386
      run: |
        git submodule init && git submodule update
        ./waf.bat configure -T debug -d
        ./waf.bat build
  build-dedicated-linux-i386:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated linux-i386
      run: |
        scripts/build-ubuntu-i386.sh -d
  build-dedicated-linux-amd64:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build dedicated linux-amd64
      run: |
        scripts/build-ubuntu-amd64.sh -d
